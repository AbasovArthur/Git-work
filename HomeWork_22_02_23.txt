вопросы:
______________________________________________________________________________________________

1.Как отказаться от изменений в файле (файлах) находящийся в рабочем каталоге (work directory)?
2.Как вернуть файл из индекса в рабочий каталог?
3.Как отменить ошибочный commit ?
4.Как создать новую ветку и переключится в нее?
5.В чем отличение между fast-forward merge  and non fast-forfard merge?
6.Можно ли удалить ветку? Как? 

В ответах на вопросы 1-4 ,6 необходимо указать конкретные команда git. 
На 6 вопросы дать объяснение своими словами.

______________________________________________________________________________________________
решение:
---------------------------------------------------------------
1.Как отказаться от изменений в файле (файлах) находящийся в рабочем каталоге (work directory)?
---------------------------------------------------------------

Нужно использовать команду
"git checkout"
с указанием имени файла,
например:

git checkout -- file.txt

Эта команда заменит содержимое файла "file.txt" на последнюю сохраненную версию в репозитории. !!! при выполнении этой команды все несохраненные изменения в файле будут утеряны.

Если нужно отменить изменения в нескольких файлах, то можно указать их имена через пробел, 
например:

git checkout -- file1.txt file2.txt

---------------------------------------------------------------
2.Как вернуть файл из индекса в рабочий каталог?
---------------------------------------------------------------

Нужно использовать команду
"git reset"
с указанием имени файла.
Например, если нужно вернуть "file.txt" из индекса в рабочий каталог, то нужно выполнить следующую команду:

git reset file.txt

После этой команды "file.txt" будет удален из индекса, и все несохраненные изменения в нем будут восстановлены.

Если нужно вернуть из индекса
все измененные файлы,
то можно использовать команду 
"git reset" 
без указания имени файла:

git reset

При выполнении этой команды все измененные файлы будут удалены из индекса,
и все несохраненные изменения будут восстановлены в рабочем каталоге.

---------------------------------------------------------------
3.Как отменить ошибочный commit ?
---------------------------------------------------------------

Нужно использовать команду
"git reset HEAD~1"
Таким образом, команда отменяет последний коммит и возвращает изменения в рабочий каталог.
При этом изменения не удаляются из индекса, так что можно отредактировать файлы и выполнить новый коммит с исправленными изменениями.

---------------------------------------------------------------
4.Как создать новую ветку и переключится в нее?
---------------------------------------------------------------

Для создания новой ветки в Git и переключения на нее используется команда 

"git checkout" 
с флагом 
"-b"

например:
git checkout -b test

---------------------------------------------------------------
5.В чем отличение между fast-forward merge  and non fast-forfard merge?
---------------------------------------------------------------

Различие между fast-forward merge и non-fast-forward merge заключается в том, что 
fast-forward merge сохраняет линейную историю коммитов, тогда как 
non-fast-forward merge создает новый коммит слияния и сохраняет историю коммитов в нелинейном виде. 

При использовании non-fast-forward merge можно добавить комментарий к коммиту слияния, чтобы описать изменения, которые были внесены в код.

---------------------------------------------------------------
6.Можно ли удалить ветку? Как? 
---------------------------------------------------------------

Для удаления ветки используйте команду 
"git branch -d <имя ветки>",
<имя ветки> - это имя удаляемой ветки.

Если ветка, которую вы пытаетесь удалить, была объединена с другими ветками, Git выдаст предупреждение и не позволит её удалить
В этом случае используйте команду :

"git branch -D <имя ветки>" 
буква "D" вместо "d",чтобы принудительно удалить ветку.

например:
git branch -d test
git branch -D master

---------------------------------------------------------------
дополнения:
---------------------------------------------------------------

"git reset" - команда для отмены изменений

"HEAD" - указатель на текущую версию ветки

"~1" - означает, что нужно отменить один коммит назад
(можно указать любое число)
----------           ----------           ----------     
3.Как отменить ошибочный commit ?

Можно использовать команду
"git reset" с флагами:

a)  "--soft"
git reset --soft HEAD~1

b)  "--mixed"
git reset --mixed HEAD~1

c)  "--hard"
git reset --hard HEAD~1

Какой флаг использовать, зависит от того, нужно ли сохранить изменения в рабочем каталоге или нет, подробнее:

a)  "--soft"
Отменить только последний коммит, но оставить изменения в рабочем каталоге

b)  "--mixed"
Отменить последний коммит и удалить его изменения из индекса

c)  "--hard"
Эта команда полностью удалит последний коммит и его изменения из индекса и рабочего каталога.

!!!
если коммит уже был опубликован на Github, то после отмены коммита и выполнения нового коммита могут возникнуть проблемы с синхронизацией. 
Если это произойдет нужно будет использовать команду
"git push --force"
чтобы принудительно заменить старый коммит на новый.

----------           ----------           ----------           

4.Как создать новую ветку и переключится в нее?

"git branch" 
для просмотра текущих веток. Убедиться, что вы находитесь в той ветке, в которой хотите создать новую ветку.

"git checkout <имя ветки>" д
ля переключения между ветками.
Например, чтобы переключиться на ветку "master", выполните команду:

git checkout master